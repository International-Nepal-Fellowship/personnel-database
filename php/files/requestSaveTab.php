<?php	include_once (dirname(__FILE__).'/connect.php');	    			//	set_error_handler("myErrorHandler");			  //salinate $_POST	$_POST=$dbi->prepareUserData($_POST);			$userID		=	$_POST['userID'];	$nameID		=	$_POST['nameid'];	$familyID	=	$dbi->get_family_id($nameID);	$action 	=	$_POST['action'];		//Artur Neumann INF/N 31.08.2012	//making everething that comes via $_POST['id'] an integer value	//we should do this for EVERY int value	$ID			=	(int)$_POST['id'];	$table		=	$_POST['tableName'];	$extra		=	false;	$current	=	false;	$requestor	=	"none";    $popupRequestor	=	"tab";	$extraTable	=	"";	$extraField = 	$table."_id";	$extraValue	=	$ID;	$query		=	"";	$ok = true;	$retVal = $action."\n";	$retVal2 = "";		//Artur Neumann ict.projects@nepal.inf.org
	//This array is used to make more changelog than the default one.
	$additional_change_logs = Array();				//$dbi->test_file('name_id,table',$nameID.",".$table);	switch($table){	case 'address':		$extra	=	true;				$extraTable	=	"name_".$table;		$current	= 	$_POST['current'];			$requestor	=	$_POST['requestor'];				$address		=	$_POST['address'];		$cityTown		=	$_POST['citytown'];		$postCodeZip	=	$_POST['postcode'];		$stateProvince	=	$_POST['stateprovince'];		$longitude		=	$_POST['longitude'];		$latitude		=	$_POST['latitude'];		$type			=	$_POST['type'];		$countryID		=	$_POST['countryID'];		if($requestor=='popup.mxml'){            $popupRequestor = $_POST['popUpRequester'];			if($popupRequestor=='organisation')			{				$familyID	=	$_POST['parentID'];				$type		=	'Organisation';				$extra	=	false;			}			if($popupRequestor=='location'){				$familyID	=	$_POST['parentID'];				$type		=	'Location';				$extra	=	false;			}		}		break;			case 'phone':		$extra	=	true;		$extraTable	=	"name_".$table;		$current	= 	$_POST['current'];			$requestor	=	$_POST['requestor'];				$phone		=	$_POST['phone'];		$type		=	$_POST['type'];		$shared		=	$_POST['shared'];		$fax		=	$_POST['fax'];		$mobile		=	$_POST['mobile'];		$extn		=	$_POST['extension'];				$countryID	=	$_POST['countryID'];		if($requestor=='popup.mxml'){            $popupRequestor = $_POST['popUpRequester'];			if($popupRequestor=='organisation')			{				$familyID	=	$_POST['parentID'];				$type		=	'Organisation';				$extra	=	false;			}			if($popupRequestor=='location'){				$familyID	=	$_POST['parentID'];				$type		=	'Location';				$extra	=	false;			}		}		//$dbi->test_file("phone: ".$nameID.",".$userID.",".$ID.",".$familyID.",".$userID.",".$popupRequestor);		break;				case 'email':		$extra	=	true;		$extraTable	=	"name_".$table;		$current	= 	$_POST['current'];			$requestor	=	$_POST['requestor'];				$email		=	$_POST['email'];		$type		=	$_POST['type'];		if($requestor=='popup.mxml'){            $popupRequestor = $_POST['popUpRequester'];			if($popupRequestor=='organisation')			{				$familyID	=	$_POST['parentID'];				$type		=	'Organisation';				$extra	=	false;			}			if($popupRequestor=='location'){				$familyID	=	$_POST['parentID'];				$type		=	'Location';				$extra	=	false;			}		}		break;			case 'photo':		$photoName=$_POST['photoName'];		$description=$_POST['description'];		//Artur Neumann INF/N 01.08.2012		//don't save the whole link just: /type=image&person=89101&file=ijp_renu_budhathoki_4ffff9dde1d67.jpg		//so we can easier sync it with other server		$link=parse_url($_POST['link']);		$link = "/" . $link['query'];		        $photo_data = $dbi->makeThumbImage($photoName,$nameID);		//$dbi->test_file("server dir: $upload_dir \n pic path: $photo_path", $photo_data);		break;			case 'passport':		$number=$_POST['passportNumber'];		$issueCountryID=$_POST['issueCountryID'];		$passportCountryID=$_POST['passportCountryID'];		$issueCity=$_POST['city'];		$issueDate=$_POST['issueDate'];		$expiryDate=$_POST['expiryDate'];		//$visaID=$_POST['visaID'];		$photoName=$_POST['photoName'];		$scanName=$_POST['scanName'];						//Artur Neumann INF/N 08.08.2012		//don't save the whole link just: /type=image&person=89101&file=ijp_renu_budhathoki_4ffff9dde1d67.jpg		//so we can easier sync it with other server		//$scanLink=$_POST['scanLink'];			$scanLink = parse_url($_POST['scanLink']);		$scanLink = "/" . $scanLink['query'];						//$photoLink=$_POST['photoLink'];		$photoLink = parse_url($_POST['photoLink']);		$photoLink = "/" . $photoLink['query'];								$photo_data = $dbi->makeThumbImage($photoName,$nameID);        $scan_data = $dbi->makeThumbImage($scanName,$nameID);		break;			case 'visa_history':        $extra=true;        $postID=$_POST['postID'];		$postHolder=$_POST['postHolder'];        $passportID=$_POST['passportID'];        $postName=$_POST['postName'];		$type=$_POST['type'];		$subtype=$_POST['subtype'];		$countryID=$_POST['countryID'];		$number=$_POST['visaNumber'];				$status=$_POST['status'];		$city=$_POST['city'];		$entryDate=$_POST['entryDate'];		$issueDate=$_POST['issueDate'];		$expiryDate=$_POST['expiryDate'];		$scanName=$_POST['scanName'];						//Artur Neumann INF/N 08.08.2012		//don't save the whole link just: /type=image&person=89101&file=ijp_renu_budhathoki_4ffff9dde1d67.jpg		//so we can easier sync it with other server		//$scanLink=$_POST['scanLink'];		$scanLink = parse_url($_POST['scanLink']);		$scanLink = "/" . $scanLink['query'];								$scan_data = $dbi->makeThumbImage($scanName,$nameID);        break;      				case 'movement':		$startDate	=	$_POST['startDate'];		$endDate	=	$_POST['endDate'];		$datesFixed	=	$_POST['fixedDates'];		$travelFrom	=	$_POST['movementFrom'];		$travelTo	=	$_POST['movementTo'];		$emailID	=	$_POST['emailID'];		$addressID	=	$_POST['addressID'];		$phoneID	=	$_POST['phoneID'];		$notes		=	$_POST['notes'];		$reason		=	$_POST['reason'];		break;			case 'leave':		$startDate	=	$_POST['startDate'];		$endDate	=	$_POST['endDate'];		$replacement=	$_POST['replacement'];		$leaveTypeID=	$_POST['leaveTypeID'];		$halfDayStart=	$_POST['halfDayStart'];		$halfDayEnd	=	$_POST['halfDayEnd'];		$leaveDays = 	$_POST['leaveDays'];		$adjustDays =	$_POST['adjustDays'];		$extra = true;		$extraTable = 'leave_adjustment';		break;			case 'staff':		$staffNumber		=	$_POST['staffNumber'] ;			$startDate			=	$_POST['startDate'] ;		$endDate			=	$_POST['endDate'] ;		$retirementDate		=	$_POST['retirementDate'] ;		$reviewDate			=	$_POST['nextReviewDate'] ;		$leavingDate		=	$_POST['leavingDate'];				$staffTypeID		=	$_POST['staffTypeID'];			$leavingReasonID	=	$_POST['leavingReasonID'];		$programmeID		=	$_POST['programmeID'];		$status				=	$_POST['status'];		$comments			=	$_POST['comments'];			//	$religionID=0;	//	$casteID=0;			//	$citizenShip='';			$extra = true;					break;			case 'insurance':		$insuranceCompanyID =   $_POST['insuranceCompanyID'];		$insuranceReference	= 	$_POST['insuranceReference'];		$insuranceContact 	=  	$_POST['insuranceContact'];		$insuranceStart   	=	$_POST['insuranceStart'];				$insuranceEnd		=	$_POST['insuranceEnd'];			$insuranceClass		=	$_POST['insuranceClass'];		$insurancePremium	=	$_POST['insurancePremium'];		$insuranceTerrorism	=	$_POST['insuranceTerrorism'];		break;		case 'registrations':		$organisationID =   $_POST['organisationID'];		$reference	= 	$_POST['reference'];		$typeID 	=  	$_POST['typeID'];		$dateStart   	=	$_POST['startDate'];				$dateEnd		=	$_POST['endDate'];			break;			case 'service':		$working_week		=	$_POST['workingWeek'];		$special_contract	=	$_POST['specialContract'];		$percentage_time	=	$_POST['percentageTime'];		$start_date			=	$_POST['startDate'];		$end_date			=	$_POST['endDate'];		$postID				=	$_POST['post_id'];		$gradeID			=	$_POST['grade_id'];		$locationID			=	$_POST['location_id'];		$comments			=	$_POST['comments'];				$extra		=	true;		$extraTable	=	"name_post";		$extraField	=	"post_id";		$extraValue	=	$postID;		$current	=	"true";		break;			case 'hospitalisation':		$startDate=$_POST['startDate'];			$endDate =$_POST['endDate'];		$hospitalID =$_POST['hospital_id'];		$relativeID =$_POST['relative_id'];		$births =$_POST['births'];		$illnessID=$_POST['illness_id'];		$cost=$_POST['cost'];		break;			case 'review':		$starRating		=	$_POST['starRating'];		$reviewTypeID	=   $_POST['reviewTypeID'];		$reviewDate		=	$_POST['reviewDate'];		$reviewedByID	=	$_POST['reviewedByID'];		$description	=	$_POST['description'];		break;			case 'training':		$courseID =	$_POST['course_id'];        $aspirations = $_POST['aspirations'];        $development = $_POST['development'];		//$need =	$_POST['needs'];		//$trainingNeedsIDs=$_POST['trainingNeeds'];        $extra  =   true;        $detailIDList =	$_POST['trainingNeeds'];        $extraTable =   'name_training_needs';        $extraID = 'training_id';        $extraField = 'training_need_id';		break;			case 'documentation':				$cv_recvd_date =	$_POST['cv_recvd_date'];		$application_recvd_date =	$_POST['application_recvd_date'];					$medical_recvd_date =	$_POST['medical_recvd_date'];		$medical_to_MO_date =	$_POST['medical_to_MO_date'];		$medical_accepted_date =	$_POST['medical_accepted_date'];		$medical_accepted_id =	$_POST['medical_accepted_id'];		$psych_recvd_date =	$_POST['psych_recvd_date'];					$psych_to_MO_date =	$_POST['psych_to_MO_date'];		$psych_from_MO_date =	$_POST['psych_from_MO_date'];		$psych_to_PD_date =	$_POST['psych_to_PD_date'];		$psych_accepted_date =	$_POST['psych_accepted_date'];		$employer_ref_recvd_date =	$_POST['employer_ref_recvd_date'];					$colleague_ref_recvd_date =	$_POST['colleague_ref_recvd_date'];					$friend_ref_recvd_date =	$_POST['friend_ref_recvd_date'];					$minister_ref_recvd_date =	$_POST['minister_ref_recvd_date'];				$interview_recvd_date =	$_POST['interview_recvd_date'];		$secondment_accepted_date =	$_POST['secondment_accepted_date'];					$post_agreed_date =	$_POST['post_agreed_date'];		$post_agreed_id =	$_POST['post_agreed_id'];		$contract_recvd_date =	$_POST['contract_recvd_date'];		$certificates_recvd_date =	$_POST['certificates_recvd_date'];					$photos_recvd_date =	$_POST['photos_recvd_date'];		$passport_recvd_date =	$_POST['passport_recvd_date'];				$professional_recvd_date =	$_POST['professional_recvd_date'];		$link_person_id =	$_POST['link_person_id'];		break;			case 'secondment':		$seconded_from_id = $_POST['seconded_from_id'];		$seconded_to_id = $_POST['seconded_to_id'];		$local_support_id = $_POST['local_support_id'];		$church_id = $_POST['church_id'];		$link_person_id=$_POST['link_person_id'];		$post_agreed_id=$_POST['post_agreed_id'];		$further_seconded_to_id=$_POST['further_seconded_to_id'];				//$osa_approval_agency_id=$_POST['osa_approval_agency_id'];		//$fsa_approval_agency_id=$_POST['fsa_approval_agency_id'];		//$osa_approval_infw_id=$_POST['osa_approval_infw_id'];		//$fsa_approval_infw_id=$_POST['fsa_approval_infw_id'];		$invitation_letter_rcvd		=	$_POST['invitation_letter_rcvd'];		$osa_member_sent		=	$_POST['osa_member_sent'];		$osa_member_received	=	$_POST['osa_member_received'];		$osa_member_copy_sent	=	$_POST['osa_member_copy_sent'];		$osa_member_signed		=	$_POST['osa_member_signed'];				$osa_agency_sent		=	$_POST['osa_agency_sent'];		$osa_agency_received	=	$_POST['osa_agency_received'];		$osa_agency_copy_sent	=	$_POST['osa_agency_copy_sent'];		$osa_agency_signed		=	$_POST['osa_agency_signed'];				//$osa_infw_sent			=	$_POST['osa_infw_sent'];		//$osa_infw_received		=	$_POST['osa_infw_received'];		//$osa_infw_copy_sent		=	$_POST['osa_infw_copy_sent'];		//$osa_infw_signed		=	$_POST['osa_infw_signed'];				$fsa_member_sent		=	$_POST['fsa_member_sent'];		$fsa_member_received	=	$_POST['fsa_member_received'];		$fsa_member_copy_sent	=	$_POST['fsa_member_copy_sent'];		$fsa_member_signed		=	$_POST['fsa_member_signed'];				$fsa_agency_sent		=	$_POST['fsa_agency_sent'];		$fsa_agency_received	=	$_POST['fsa_agency_received'];		$fsa_agency_copy_sent	=	$_POST['fsa_agency_copy_sent'];		$fsa_agency_signed		=	$_POST['fsa_agency_signed'];				//$fsa_infw_sent			=	$_POST['fsa_infw_sent'];		//$fsa_infw_received		=	$_POST['fsa_infw_received'];		//$fsa_infw_copy_sent		=	$_POST['fsa_infw_copy_sent'];		//$fsa_infw_signed		=	$_POST['fsa_infw_signed'];						/*		$FSA_status = $_POST['FSA_status'];		$FSA_date = $_POST['FSA_date'];		$OSA_status = $_POST['OSA_status'];		$OSA_date = $_POST['OSA_date'];		*/		break;			case 'education':		$start_date = $_POST['start_date'];		$end_date = $_POST['end_date'];		$qualification = $_POST['qualification'];		$division_grade = $_POST['division_grade'];		$institutionID = $_POST['institutionID'];		$specialityID = $_POST['specialityID'];		$second_specialityID = $_POST['second_specialityID'];		$qualificationID=$_POST['qualificationID'];				$scanName=$_POST['scanName'];				//Artur Neumann INF/N 08.08.2012		//don't save the whole link just: /type=image&person=89101&file=ijp_renu_budhathoki_4ffff9dde1d67.jpg		//so we can easier sync it with other server		$scanLink=parse_url($_POST['scanLink']);		$scanLink = "/" . $scanLink['query'];								        $scan_data = $dbi->makeThumbImage($scanName,$nameID);		break;			case 'work_experience':		$start_date = $_POST['start_date'];		$end_date = $_POST['end_date'];		$city_town =	$_POST['city_town'];		$countryID = $_POST['countryID'];		$description = $_POST['description'];		$leavingReasonID = $_POST['leavingReasonID'];		$workplace = $_POST['workplace'];		$job_title = $_POST['job_title'];		break;	case 'home_assignment':			$dateFrom					=	$_POST['dateFrom'];		$dateUntil					=	$_POST['dateUntil'];		$infoPackSent				=	$_POST['infoPackSent'];		$interviewDate				=	$_POST['interviewDate'];		$reportReceived				=	$_POST['reportReceived'];		$rsentDateMember			=	$_POST['rSentDateMember'];		$rsentDateAgency			=	$_POST['rSentDateAgency'];		$medicalArranged			=	$_POST['medicalArranged'];		$medicalReportReceived		=	$_POST['reportReceived'];		$msentDateAgency			=	$_POST['mSentDateAgency'];		$stvManagerCommentsReceived	=	$_POST['STVManagerCommentsReceived'];		$notes						=	$_POST['HADescription'];		$invitationLetterReceived	=	$_POST['invitationLetterReceived'];		$interviewBy	= $_POST['interviewBy'];		$confirmedDates	=$_POST['confirmedDates'];				break;	case 'orientation':			$email_address_requested =	$_POST['emailAddressRequested'];		$email_address_created =	$_POST['emailAddressCreated'];					$email_installed =	$_POST['emailInstalled'];		$LOT_duration_discussed =	$_POST['lotDurationDiscussed'];		$LOT_requested =	$_POST['lotRequested'];		$LOT_confirmed =	$_POST['lotConfirmed'];		//$LOT_details =	$_POST['lotDetails'];		$KTM_LOT_scheduled =	$_POST['ktmLOTScheduled'];		$KTM_LOT_Confirmed =	$_POST['ktmLOTConfirmed'];		$Dates_of_KTM_LOT =	$_POST['ktmLOT'];		$Housing_preferences =	$_POST['housingPreferences'];		$PKR_LOT_housing_arranged =	$_POST['pkrLOTHousingArranged'];					//$PKR_LOT_housing_details =	$_POST['pkrLOTHousingDetails'];					$housing_requested =	$_POST['housingRequested'];					$housing_arranged =	$_POST['housingArranged'];				$housing_confirmed =	$_POST['housingConfirmed'];		//$housing_details =	$_POST['dateHousingDetails'];					/*        $arrival_flight =	$_POST['arrivalFlight'];		$arrival_date =	$_POST['date'];		$arrival_time =	$_POST['time'];		$pickup_arranged =	$_POST['pickUpArranged'];			$acco_arranged =	$_POST['accoArranged'];			//$acco_details =	$_POST['accoDetails'];		$bus_ticket_arranged =	$_POST['busTicketArranged'];				$ticket_info_sent_to_pkr =	$_POST['ticketInfoSentToPKR'];		$survival_orientation_booklet =	$_POST['survivalOrientationBooklet'];				$welcome_pack =	$_POST['welcomePack'];		$welcome_letter =	$_POST['welcomeLetter'];		*/		$link_names_sent = $_POST['linkNamesSent'];				$housing_link_person_id =$_POST['housingLinkPersonID'];		$ktm_link_person_id	=$_POST['ktmLinkPersonID'];		$pkr_link_person_id	=$_POST['pkrLinkPersonID'];		$school_children_link_person_id	=$_POST['schoolChildrenLinkPersonID'];		$work_link_person_id	= $_POST['workLinkPersonID'];				break;	case 'orientation_arrangement':					$arrival_flight =	$_POST['arrivalFlight'];		$arrival_date =	$_POST['date'];		$arrival_time =	$_POST['time'];		$pickup_arranged =	$_POST['pickUpArranged'];			$acco_arranged =	$_POST['accoArranged'];			//$acco_details =	$_POST['accoDetails'];		$bus_ticket_arranged =	$_POST['busTicketArranged'];				$ticket_info_sent_to_pkr =	$_POST['ticketInfoSentToPKR'];		$survival_orientation_booklet =	$_POST['survivalOrientationBooklet'];				$welcome_pack =	$_POST['welcomePack'];		$welcome_letter =	$_POST['welcomeLetter'];			break;		case 'patient_bill':				$datePaid=$_POST['datePaid'];		$paidBy=$_POST['paidBy'];		$amount=$_POST['amount'];	//	$dbi->test_file('requestSaveTab.php $datePaid , $paidBy , $amount\n'," $datePaid , $paidBy , $amount");						break;		case 'patient_service':				$dateGiven=$_POST['dateGiven'];		$serviceTypeID=$_POST['service'];		break;		case 'patient_surgery':				$dateGiven=$_POST['dateGiven'];		$surgeryTypeID=$_POST['surgery'];		break;		case 'patient_appliance':				$dateGiven=$_POST['dateGiven'];		$applianceTypeID=$_POST['appliance'];		$requestedFromID=$_POST['requestedFrom'];		break;			case 'treatment':				$startDate=$_POST['startDate'];		$endDate=$_POST['endDate'];		$caseID=$_POST['caseID'];		$regimenID=$_POST['regimenID'];		$categoryID=$_POST['categoryID'];		$resultID=$_POST['resultID'];		break;		case 'patient_visit':		//$current	=	"true";				$dateReferred	= 	$_POST['dateReferred'];			$dateAttended	=	$_POST['dateAttended'];				$dateDischarged	=	$_POST['dateDischarged'];		$hospitalID		=	$_POST['hospitalID'];		$type			=	$_POST['type'];			$affected		=	$_POST['affected'];		$referredFromID	=	$_POST['referredFromID'];		$mainReasonID 	=	$_POST['mainReasonID'];		$dischargedTo 	=	$_POST['dischargedTo'];		$patientNumber 	=	$_POST['patientNumber'];		$footwearNeeded =	$_POST['footwearNeeded'];		$PWD 	=	$_POST['PWD'];		$CAC 	=	$_POST['CAC'];				$PAL 	=	$_POST['PIPal'];        $newCase    =   $_POST['newCase'];        $extra  =   true;        $detailIDList =	$_POST['detailReasonID'];        $extraTable =   'visit_treatment_reasons';        $extraID = 'visit_id';        $extraField = 'detail_treatment_reason_id';		break;		case 'health_staff':		$staffTypeID= $_POST['staffTypeID'];		break;			}		//if ($extra) {		$dbi->query("Start transaction");	//}		if($action	==	"Add New") { //verify add permissions		if ($dbi->isNotAllowed($table,'add')) {			$action = "None";			$extra = false;			$ok = false;			$query = "Add disallowed for ".$table;		}	}	if($action	==	"Edit") { //verify edit permissions		if ($dbi->isNotAllowed($table,'edit')) {			$action = "None";			$extra = false;			$ok = false;			$query = "Edit disallowed for ".$table;		}	}    if($dbi->maintenance()) { //knobble any further update        $action = "None";        $extra = false;        $ok = false;        $query = "Maintenance mode - try again later";    }		    if($action	==	"Add New") {		switch($table){        		case 'health_staff':		//Cant INSERT duplicate row for a  nameID , SO check to see if already exists or not			$query="SELECT id FROM health_staff WHERE name_id= '$nameID'";			$result=$dbi->query($query);			if (mysql_num_rows($result) > 0)//A row already EXISTS for this name_id SO just UPDATE				$query=sprintf("UPDATE `health_staff` SET `deleted`='0', `health_staff_type_id`='".$staffTypeID."'WHERE `name_id`=".$nameID);			else //NO row  EXISTS for this name_id SO INSERT a new row				$query=sprintf("INSERT INTO `health_staff` (id,name_id,health_staff_type_id) VALUES ('','$nameID','$staffTypeID')");			break;				case 'patient_visit':			$query=sprintf("INSERT INTO `patient_visit` (id,patient_id,`type`,affected,date_referred,referred_from_id,date_attended,date_discharged,main_treatment_reason_id,discharged_to,hospital_id,patient_number,PAL,PWD,care_after_cure,footwear_needed,new_case) VALUES ('','$nameID','$type','$affected','$dateReferred','$referredFromID','$dateAttended','$dateDischarged','$mainReasonID','$dischargedTo','$hospitalID','$patientNumber','$PAL','$PWD','$CAC','$footwearNeeded','$newCase')");			break;				case 'treatment':			$query=sprintf("INSERT INTO `treatment` (id,patient_id,treatment_category_id,date_from,date_until,treatment_case_id,treatment_regimen_id,treatment_result_id) VALUES ('','$nameID','$categoryID','$startDate','$endDate','$caseID','$regimenID','$resultID')");						break;						case 'patient_appliance':			$query=sprintf("INSERT INTO `patient_appliance` (id,patient_id,date_given,appliance_type_id,requested_from_id) VALUES ('','$nameID','$dateGiven','$applianceTypeID','$requestedFromID')");						break;				case 'patient_surgery':			$query=sprintf("INSERT INTO `patient_surgery` (id,patient_id,date_given,surgery_type_id) VALUES ('','$nameID','$dateGiven','$surgeryTypeID')");						break;				case 'patient_service':			$query=sprintf("INSERT INTO `patient_service` (id,patient_id,date_given,service_type_id) VALUES ('','$nameID','$dateGiven','$serviceTypeID')");						break;				case 'patient_bill':			$query=sprintf("INSERT INTO `patient_bill` (id,patient_id,date_paid,amount,paid_by) VALUES ('','$nameID','$datePaid','$amount','$paidBy')");						break;		case 'address':			$query=sprintf("INSERT INTO `address` (id,family_id,country_id,address,`type`,city_town,postcode_zip,state_province,longitude,latitude) VALUES ('','$familyID','$countryID','$address','$type','$cityTown','$postCodeZip','$stateProvince','$longitude','$latitude')");				break;				case 'phone':			$query=sprintf("INSERT INTO `phone` (id,family_id,country_id,phone,`type`,extn,shared,fax,mobile) VALUES ('','$familyID','$countryID','$phone','$type','$extn','$shared','$fax','$mobile')");			break;						case 'email':			$query=sprintf("INSERT INTO `email` (id,family_id,email,`type`) VALUES ('','$familyID','$email','$type')");			break;					case 'photo':			if($photoName=='') $link = '';			$query=sprintf("INSERT INTO `photo`(id,name_id,description,link,photo) VALUES ('','$nameID','$description','$link'");			$query.=",'$photo_data')"; //can't put a blob into sprintf()			break;					case 'passport':			if($scanName=='') $scanLink = '';			if($photoName=='') $photoLink = '';			$query=sprintf("INSERT INTO `passport`(id,name_id,number,issue_date,expiry_date,issue_city,issue_country_id,passport_country_id,scan_link,photo_link,photo,scan) VALUES ('','$nameID','$number','$issueDate','$expiryDate','$issueCity','$issueCountryID','$passportCountryID','$scanLink','$photoLink'");			$query.=",'$photo_data','$scan_data')"; //can't put a blob into sprintf()			break;					 case 'visa_history':            $query="visa history processed later - need to update visa table first"; //dummy                   break;					case 'movement':			$query=sprintf("INSERT INTO `movement` (id,name_id,address_id,email_id,phone_id,date_from,date_until,dates_fixed,travel_to,reason_id,notes,travel_from) VALUES ('','$nameID','$addressID','$emailID','$phoneID','$startDate','$endDate','$datesFixed','$travelTo','$reason','$notes','$travelFrom')");//$dbi->test_file("requestSaveTab.php Add New \n\n",$query);			break;					case 'leave':			$query=sprintf("INSERT INTO `leave` (id,name_id,date_from,date_until,leave_type_id,replacement,half_day_from,half_day_until,leave_days) VALUES ('','$nameID','$startDate','$endDate','$leaveTypeID','$replacement','$halfDayStart','$halfDayEnd','$leaveDays')");			break;					case 'staff':			$query=sprintf("INSERT INTO `staff`(id,staff_type_id,name_id,leaving_reason_id,programme_id,start_date,probation_end_date,retirement_date,leaving_date,next_review_due,staff_number,status,comments) VALUES('','$staffTypeID','$nameID','$leavingReasonID','$programmeID','$startDate','$endDate','$retirementDate','$leavingDate','$reviewDate','$staffNumber','$status','$comments')"); 			break;					case 'insurance':			$query=sprintf("INSERT INTO `insurance`(id,name_id,start_date,end_date,company_id,reference,contact,insurance_class,premium,terrorism) VALUES('','$nameID','$insuranceStart','$insuranceEnd','$insuranceCompanyID','$insuranceReference','$insuranceContact','$insuranceClass','$insurancePremium','$insuranceTerrorism')"); 			break;					case 'registrations':			$query=sprintf("INSERT INTO `registrations`(id,name_id,start_date,end_date,organisation_id,reference,registration_type_id) VALUES('','$nameID','$dateStart','$dateEnd','$organisationID','$reference','$typeID')"); 			break;					case 'service':			$query=sprintf("INSERT INTO `service` (id,name_id,post_id,grade_id,location_id,date_from,date_until,percent_of_time,special_contract,working_week,comments) VALUES ('','$nameID','$postID','$gradeID','$locationID','$start_date','$end_date','$percentage_time','$special_contract','$working_week','$comments')");			break;					case 'hospitalisation':			$query=sprintf("INSERT INTO `hospitalisation` (id,name_id,relative_id,date_from,date_until,births,illness_id,hospital_id,cost) VALUES ('','$nameID','$relativeID','$startDate','$endDate','$births','$illnessID','$hospitalID','$cost')");			break;					case 'review':			$query=sprintf("INSERT INTO `review` (id,name_id,star_rating,comments,review_date,reviewed_by_id,review_type_id) VALUES('','$nameID','$starRating','$description','$reviewDate','$reviewedByID','$reviewTypeID')");			break;					case 'training':        /*            if ($courseID == 0) { // don't save empty course, but still allow to save needs                $query=sprintf("INSERT INTO `training`(id,name_id,career_aspirations,career_development) VALUES ('','$nameID','$aspirations','$development')");            }            else {*/                $query=sprintf("INSERT INTO `training`(id,name_id,course_id,career_aspirations,career_development) VALUES ('','$nameID','$courseID','$aspirations','$development')");            //}            break;		case 'documentation':			$query=sprintf("INSERT INTO `documentation`(id,name_id,cv_recvd_date,application_recvd_date,medical_recvd_date,medical_to_MO_date,medical_accepted_date,medical_accepted_id,psych_recvd_date,psych_to_MO_date,psych_from_MO_date,psych_to_PD_date,psych_accepted_date,employer_ref_recvd_date,colleague_ref_recvd_date,friend_ref_recvd_date,minister_ref_recvd_date,interview_recvd_date,secondment_accepted_date,post_agreed_date,post_agreed_id,contract_recvd_date,certificates_recvd_date,photos_recvd_date,passport_recvd_date,professional_recvd_date,link_person_id) VALUES ('','$nameID','$cv_recvd_date','$application_recvd_date','$medical_recvd_date','$medical_to_MO_date','$medical_accepted_date',$medical_accepted_id,'$psych_recvd_date','$psych_to_MO_date','$psych_from_MO_date','$psych_to_PD_date','$psych_accepted_date','$employer_ref_recvd_date','$colleague_ref_recvd_date','$friend_ref_recvd_date','$minister_ref_recvd_date','$interview_recvd_date','$secondment_accepted_date','$post_agreed_date',$post_agreed_id,'$contract_recvd_date','$certificates_recvd_date','$photos_recvd_date','$passport_recvd_date','$professional_recvd_date',$link_person_id)");			break;					case 'secondment':			$query=sprintf("INSERT INTO `secondment`(id,name_id,seconded_from_id,seconded_to_id,local_support_id,church_id,further_seconded_to_id,post_agreed_id,link_person_id,osa_member_sent_date,osa_member_received_date,osa_member_signed_date,osa_member_copy_sent_date,osa_agency_sent_date,osa_agency_received_date,osa_agency_signed_date,osa_agency_copy_sent_date,fsa_member_sent_date,fsa_member_received_date,fsa_member_signed_date,fsa_member_copy_sent_date,fsa_agency_sent_date,fsa_agency_received_date,fsa_agency_signed_date,fsa_agency_copy_sent_date,invitation_letter_rcvd_date) VALUES ('','$nameID','$seconded_from_id','$seconded_to_id','$local_support_id','$church_id','$further_seconded_to_id','$post_agreed_id','$link_person_id','$osa_member_sent','$osa_member_received','$osa_member_signed','$osa_member_copy_sent','$osa_agency_sent','$osa_agency_received','$osa_agency_signed','$osa_agency_copy_sent','$fsa_member_sent','$fsa_member_received','$fsa_member_signed','$fsa_member_copy_sent','$fsa_agency_sent','$fsa_agency_received','$fsa_agency_signed','$fsa_agency_copy_sent','$invitation_letter_rcvd')");			break;					case 'education':			if($scanName=='') $scanLink = '';			$query=sprintf("INSERT INTO `education` (id,name_id,start_date,end_date,qualification_level,division_grade,institution_id,speciality_id,second_speciality_id,qualification_id,scan_link,certificate_scan) VALUES ('','$nameID','$start_date','$end_date','$qualification','$division_grade','$institutionID','$specialityID','$second_specialityID','$qualificationID','$scanLink'");			$query.=",'$scan_data')"; //can't put a blob into sprintf()			break;			case 'work_experience':			$query=sprintf("INSERT INTO `work_experience` (id,name_id,start_date,end_date,leaving_reason_id,country_id,description,workplace,city_town,job_title) VALUES ('','$nameID','$start_date','$end_date','$leavingReasonID','$countryID','$description','$workplace','$city_town','$job_title')");				break;							case 'home_assignment':			$query=sprintf("INSERT INTO `home_assignment`(id,date_from, name_id,date_until, infopack_sent,interview_date,report_received,rsent_date_member,rsent_date_agency,medical_arranged,medical_report_received,msent_date_agency,STV_manager_comments_received,invitation_letter_received,notes,interview_by,confirmed_dates) VALUES ('','$dateFrom','$nameID','$dateUntil', '$infoPackSent','$interviewDate','$reportReceived','$rsentDateMember','$rsentDateAgency','$medicalArranged','$medicalReportReceived','$msentDateAgency','$stvManagerCommentsReceived','$invitationLetterReceived','$notes','$interviewBy','$confirmedDates')");					break;					case 'orientation':			$query=sprintf("INSERT INTO `orientation`(id,name_id,email_address_requested_date,email_address_created_date,email_installed_date,LOT_duration_discussed_date,LOT_requested_date,LOT_confirmed_date,KTM_LOT_scheduled_date,KTM_LOT_Confirmed_date,Dates_of_KTM_LOT,Housing_preferences_date,PKR_LOT_housing_arranged_date,housing_requested_date,housing_arranged_date,housing_confirmed_date,link_names_sent_date,housing_link_person_id,ktm_link_person_id,pkr_link_person_id,school_children_link_person_id,work_link_person_id) VALUES ('','$nameID','$email_address_requested','$email_address_created','$email_installed','$LOT_duration_discussed','$LOT_requested','$LOT_confirmed','$KTM_LOT_scheduled','$KTM_LOT_Confirmed','$Dates_of_KTM_LOT','$Housing_preferences','$PKR_LOT_housing_arranged','$housing_requested','$housing_arranged','$housing_confirmed','$link_names_sent','$housing_link_person_id','$ktm_link_person_id','$pkr_link_person_id','$school_children_link_person_id','$work_link_person_id')");			break;			case 'orientation_arrangement':			$query=sprintf("INSERT INTO `orientation_arrangement`(id,name_id,arrival_flight,arrival_date,arrival_time,pickup_arranged_date,accomodation_arranged_date,bus_ticket_arranged_date,ticket_info_sent_to_pkr_date,survival_orientation_booklet_date,welcome_pack_date,welcome_letter_date) VALUES ('','$nameID','$arrival_flight','$arrival_date','$arrival_time','$pickup_arranged','$acco_arranged','$bus_ticket_arranged','$ticket_info_sent_to_pkr','$survival_orientation_booklet','$welcome_pack','$welcome_letter')");			break;		}					if ($query != "") {			$retVal.=$query."\n";			//$dbi-> test_file('Savetab:'.$query."\n");			if ($extra) {                switch($table) { 				case 'leave':                                    $ok = ($dbi->isInteger($ID=$dbi->insertQuery($query)));					break;				                case 'staff':                                    $ok = ($dbi->isInteger($ID=$dbi->insertQuery($query)));                                        if ($ok) {                        //Cant INSERT duplicate row for a  nameID , SO check to see if already exists or not                        $query1="SELECT id FROM inf_staff WHERE name_id= '$nameID'";                        $retVal.=$query1."\n";                        $result=$dbi->query($query1);                        if (mysql_num_rows($result) > 0)//A row already EXISTS for this name_id SO just UPDATE                            $query1=sprintf("UPDATE `inf_staff` SET `deleted`='0' WHERE `name_id`=".$nameID);                        	//TODO do we need write a log here?	                                                else //NO row  EXISTS for this name_id SO INSERT a new row                            $query1=sprintf("INSERT INTO `inf_staff` (id,name_id) VALUES ('','$nameID')");                        	//TODO do we need write a log here?                        	                        $ok = ($dbi->isInteger($dbi->query($query1)));                        $retVal.=$query1."\n";                    }                break;                            case 'visa_history':									/*                    if ($visaID == 0) {                        $query1 = sprintf("INSERT INTO `visa` (id,name) VALUES ('','$visaName')");                        $ok = ($dbi->isInteger($visaID=$dbi->insertQuery($query1)));                        $retVal.=$query1."\n";                        if ($ok) {                            $query1 = sprintf("UPDATE `passport` SET visa_id='".$visaID."' WHERE id='".$passportID."'");                            $ok = ($dbi->isInteger($dbi->query($query1)));                            $retVal.=$query1."\n";                        }                    }                    else {                        $query1 = sprintf("UPDATE `visa` SET name='".$visaName."' WHERE id='".$visaID."'");                        $ok = ($dbi->isInteger($dbi->query($query1)));                        $retVal.=$query1."\n";                    }                                       */                    if ($ok) { //now we can process history record                        $query =    sprintf("INSERT INTO `visa_history` (id,post_id,passport_id,postholder,number,subtype,issue_country_id,entry_date,issue_date,expiry_date,`type`,`status`,issue_city,scan_link,scan) VALUES ('','$postID','$passportID','$postHolder','$number','$subtype','$countryID','$entryDate','$issueDate','$expiryDate','$type','$status','$city','$scanLink'");						$query.=",'$scan_data')"; //can't put a blob into sprintf()						                        $retVal.=$query."\n";                        $ok = ($dbi->isInteger($ID=$dbi->insertQuery($query)));                    }                break;                                default:                    $ok = ($dbi->isInteger($ID=$dbi->insertQuery($query)));//if database returns integer (last inserted row ID)then NOT an error//$dbi->test_file('1.',$query);		                break;                }												if ($ok) {							switch($table) {			/*					case 'staff': // add relatives from rest of family									// first add other relations belonging to same family					$query=sprintf("SELECT relation_id from `relation` WHERE where relation.deleted='0' AND name_id in (SELECT id from `name` WHERE family_id=$familyID AND name.deleted='0') AND relation_id != $nameID");					$retVal.=$query."\n";					$result = $dbi->query($query);					while($ok && ($row = mysql_fetch_array($result))){									$query	=	sprintf("INSERT INTO relation (name_id,relation_id,relationship) VALUES ($nameID,".$row[0].",'Other')");						$retVal.=$query."\n";						$ok = ($dbi->isInteger($dbi->query($query)));										}					// then add reverse relationship					$query=sprintf("SELECT name_id from `relation` WHERE relation.deleted='0' AND name_id in (SELECT id from `name` WHERE family_id=$familyID AND name.deleted='0') AND relation_id = $nameID");					$retVal.=$query."\n";					$result = $dbi->query($query);										while($ok && ($row = mysql_fetch_array($result))){									$query	=	sprintf("INSERT INTO `relation` (name_id,relation_id,relationship) VALUES ($nameID,".$row[0].",'Other')");						$retVal.=$query."\n";						$ok = ($dbi->isInteger($dbi->query($query)));										}					break;			*/					case 'address':				case 'phone':				case 'email':                                        $extraValue = $ID;                    $query=sprintf("INSERT INTO `".$extraTable."`(name_id,".$extraField.") VALUES ('$nameID','$extraValue')");                    $retVal.=$query."\n";                                        //Artur Neumann ict.projects@nepal.inf.org
                    //11.07.2013
                    //change to insertQuery and save the result
                    $insert_result = $dbi->insertQuery($query);
                    $ok = ($dbi->isInteger($insert_result));
                    
                    //Artur Neumann ict.projects@nepal.inf.org
                    //11.07.2013
                    //get data for additional change log
                    if ($ok) {
                    		
                    	$additional_change_log['userID'] = $userID;
                    	$additional_change_log['table'] = $extraTable;
                    	$additional_change_log['recordID'] = $insert_result;
                    	$additional_change_log['updateType'] = 'new';
                    	$additional_change_log['changedFor'] = 'tab';
                    	$additional_change_log['nameID'] = $nameID;
                    		
                    	array_push ($additional_change_logs, $additional_change_log);
                    		
                    }                                        					break;				}				}            }			else {				//$dbi->printTransactionInfo($ID=$dbi->insertQuery($query));//$ID=$dbi->insertQuery($query)							$ok=($dbi->isInteger($ID=$dbi->insertQuery($query)));            }		}	}	else if($action	==	"Edit") {			$timestamp	=	$_POST['timestamp'];		// CHECK IF TIMESTAMP IS OK OR NOT. IF NOT OK THEN exit;		$dbi->checkTimestamp($table,$table.'_timestamp',$timestamp,'id',$ID);				switch($table){				case 'health_staff':			$query=sprintf("UPDATE `health_staff` SET health_staff_type_id='".$staffTypeID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'patient_visit':			$extra=true;			$query=sprintf("UPDATE `patient_visit`  SET `type`='".$type."',affected='".$affected."',date_referred='".$dateReferred."',referred_from_id='".$referredFromID."',date_attended='".$dateAttended."',date_discharged='".$dateDischarged."',main_treatment_reason_id='".$mainReasonID."',discharged_to='".$dischargedTo."',hospital_id='".$hospitalID."',patient_number='".$patientNumber."',PAL='".$PAL."',PWD='".$PWD."',new_case='".$newCase."',care_after_cure='".$CAC."',footwear_needed='".$footwearNeeded."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'treatment':						$query=sprintf("UPDATE `treatment` SET treatment_category_id='".$categoryID."',treatment_result_id='".$resultID."',treatment_regimen_id='".$regimenID."',date_from='".$startDate."',date_until='".$endDate."',treatment_case_id='".$caseID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");							break;				case 'patient_appliance':			$query=sprintf("UPDATE `patient_appliance` SET date_given='".$dateGiven."',appliance_type_id='".$applianceTypeID."',requested_from_id='".$requestedFromID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'patient_surgery':			$query=sprintf("UPDATE `patient_surgery` SET date_given='".$dateGiven."',surgery_type_id='".$surgeryTypeID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");						break;				case 'patient_service':			$query=sprintf("UPDATE `patient_service` SET date_given='".$dateGiven."',service_type_id='".$serviceTypeID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");						break;				case 'patient_bill':			$query=sprintf("UPDATE `patient_bill` SET date_paid='".$datePaid."',amount='".$amount."',paid_by='".$paidBy."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;		case 'address':			$query	=	sprintf("UPDATE `address` SET country_id='".$countryID."',address='".$address."',`type`='".$type."',city_town='".$cityTown."',postcode_zip='".$postCodeZip."', state_province='".$stateProvince."',longitude='".$longitude."', latitude='".$latitude."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'phone':			$query=sprintf("UPDATE `phone` SET country_id='".$countryID."',phone='".$phone."',`type`='".$type."', mobile='".$mobile."',fax='".$fax."',shared='".$shared."',extn = '".$extn."' WHERE id=".$ID);			break;						case 'email':			$query=sprintf("UPDATE `email` SET email='".$email."',`type`='".$type."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;					case 'photo':			if($photoName!=''){				$query="UPDATE `photo` SET photo='".$photo_data."'"; //can't put a blob into sprintf()				$query.=sprintf(" ,description='".$description."',link='".$link."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				}			else{				$query=sprintf("UPDATE `photo` SET description='".$description."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				}			break;				case 'passport':			$query=sprintf("UPDATE `passport` SET number='".$number."',issue_date='".$issueDate."',expiry_date='".$expiryDate."',issue_city='".$issueCity."',issue_country_id='".$issueCountryID."',passport_country_id='".$passportCountryID."'");			if($scanName!=''){ // scan uploaded				$query.=sprintf(",scan_link='".$scanLink."'");				$query.=" , scan='$scan_data'"; //can't put a blob into sprintf()			}			if($photoName!=''){ // photo uploaded				$query.=sprintf(",photo_link='".$photoLink."'");				$query.=" , photo='$photo_data'"; //can't put a blob into sprintf()			}			$query.=sprintf(" WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'visa_history':			$query=sprintf("UPDATE `visa_history` SET post_id='".$postID."',passport_id='".$passportID."',postholder='".$postHolder."',subtype='".$subtype."', number='".$number."',issue_country_id='".$countryID."',entry_date='".$entryDate."',issue_date='".$issueDate."',expiry_date='".$expiryDate."',`type`='".$type."',`status`='".$status."',`issue_city`='".$city."'");			if($scanName!=''){ // scan uploaded				$query.=sprintf(",scan_link='".$scanLink."'");				$query.=" , scan='$scan_data'"; //can't put a blob into sprintf()			}			$query.=sprintf(" WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");			break;					case 'movement':			$query=sprintf("UPDATE `movement` SET address_id='".$addressID."',email_id='".$emailID."',phone_id='".$phoneID."',date_from='".$startDate."',date_until='".$endDate."',dates_fixed='".$datesFixed."',travel_to='".$travelTo."',reason_id='".$reason."',notes='".$notes."',travel_from='".$travelFrom."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				//	$dbi->test_file("requestSaveTab.php Edit \n\n",$query);			break;					case 'leave':			$query=sprintf("UPDATE `leave` SET date_from='".$startDate."',date_until='".$endDate."',half_day_from='".$halfDayStart."' ,half_day_until='".$halfDayEnd."' ,leave_type_id='".$leaveTypeID."',replacement='".$replacement."',leave_days='".$leaveDays."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;					case 'staff':			$query=sprintf("UPDATE `staff` SET staff_number='".$staffNumber."',staff_type_id='".$staffTypeID."',start_date='".$startDate."',probation_end_date='".$endDate."',retirement_date='".$retirementDate."',leaving_reason_id='".$leavingReasonID."',programme_id='".$programmeID."',leaving_date='".$leavingDate."',next_review_due='".$reviewDate."',status='".$status."',comments='".$comments."'			WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");			break;					case 'insurance':			$query=sprintf("UPDATE `insurance` SET start_date='".$insuranceStart."',end_date='".$insuranceEnd."',company_id='".$insuranceCompanyID."',reference='".$insuranceReference."',contact='".$insuranceContact."',insurance_class='".$insuranceClass."',premium='".$insurancePremium."',terrorism='".$insuranceTerrorism."'			WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");			break;					case 'registrations':			$query=sprintf("UPDATE `registrations` SET start_date='".$dateStart."',end_date='".$dateEnd."',organisation_id='".$organisationID."',reference='".$reference."',registration_type_id='".$typeID."'			WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");			break;					case 'service':			$query=sprintf("UPDATE `service` SET date_from= '".$start_date."',date_until='".$end_date."',working_week='".$working_week."',comments='".$comments."',percent_of_time='".$percentage_time."',special_contract='".$special_contract."',location_id='".$locationID."',grade_id='".$gradeID."',post_id='".$postID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;					case 'hospitalisation':			//$dbi->checkTimestamp('hospitalisation','hospitalisation_timestamp',$timestamp,'id',$ID);			$query=sprintf("UPDATE `hospitalisation` SET name_id ='".$nameID."',relative_id='".$relativeID."',date_from='".$startDate."',date_until='".$endDate."',births='".$births."',illness_id='".$illnessID."',hospital_id='".$hospitalID."',cost='".$cost."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;					case 'review':			//$dbi->checkTimestamp('review','review_timestamp',$timestamp,'id',$ID);			$query=sprintf("UPDATE `review` SET star_rating ='".$starRating."', comments ='".$description."',review_date='".$reviewDate."',reviewed_by_id='".$reviewedByID."',review_type_id ='".$reviewTypeID."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'training':			/*if ($courseID == 0) { // don't save empty course, but still allow to save needs                $query=sprintf("UPDATE `training` set career_aspirations='".$aspirations."', career_development='".$development."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");            }            else {*/            //$dbi->checkTimestamp('training','training_timestamp',$timestamp,'id',$ID);                $query=sprintf("UPDATE `training` set course_id='".$courseID."', career_aspirations='".$aspirations."', career_development='".$development."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");            //}			break;				case 'documentation':			//$dbi->checkTimestamp('documentation','documentation_timestamp',$timestamp,'id',$ID);						$query=sprintf("UPDATE `documentation` set cv_recvd_date='".$cv_recvd_date."',application_recvd_date='".$application_recvd_date."', medical_recvd_date='".$medical_recvd_date."',medical_to_MO_date='".$medical_to_MO_date."', medical_accepted_date='".$medical_accepted_date."',medical_accepted_id='".$medical_accepted_id."', psych_recvd_date='".$psych_recvd_date."',psych_to_MO_date='".$psych_to_MO_date."', psych_from_MO_date='".$psych_from_MO_date."',psych_to_PD_date='".$psych_to_PD_date."', psych_accepted_date='".$psych_accepted_date."',employer_ref_recvd_date='".$employer_ref_recvd_date."', colleague_ref_recvd_date='".$colleague_ref_recvd_date."',friend_ref_recvd_date='".$friend_ref_recvd_date."', minister_ref_recvd_date='".$minister_ref_recvd_date."',interview_recvd_date='".$interview_recvd_date."', secondment_accepted_date='".$secondment_accepted_date."', post_agreed_date='".$post_agreed_date."',post_agreed_id='".$post_agreed_id."', contract_recvd_date='".$contract_recvd_date."',certificates_recvd_date='".$certificates_recvd_date."', photos_recvd_date='".$photos_recvd_date."',passport_recvd_date='".$passport_recvd_date."', professional_recvd_date='".$professional_recvd_date."',link_person_id='".$link_person_id."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;				case 'secondment':										//$dbi->checkTimestamp('secondment','secondment_timestamp',$timestamp,'id',$ID);						$query=sprintf("UPDATE `secondment` set further_seconded_to_id='".$further_seconded_to_id."', post_agreed_id='".$post_agreed_id."',link_person_id='".$link_person_id."',seconded_from_id='".$seconded_from_id."',seconded_to_id='".$seconded_to_id."',local_support_id='".$local_support_id."',church_id='".$church_id."',osa_member_sent_date='".$osa_member_sent."',invitation_letter_rcvd_date='".$invitation_letter_rcvd."',osa_member_received_date='".$osa_member_received."',osa_member_signed_date='".$osa_member_signed."',osa_member_copy_sent_date='".$osa_member_copy_sent."',osa_agency_sent_date='".$osa_agency_sent."',osa_agency_received_date='".$osa_agency_received."',osa_agency_signed_date='".$osa_agency_signed."',osa_agency_copy_sent_date='".$osa_agency_copy_sent."',fsa_member_sent_date='".$fsa_member_sent."',fsa_member_received_date='".$fsa_member_received."',fsa_member_signed_date='".$fsa_member_signed."',fsa_member_copy_sent_date='".$fsa_member_copy_sent."',fsa_agency_sent_date='".$fsa_agency_sent."',fsa_agency_received_date='".$fsa_agency_received."',fsa_agency_signed_date='".$fsa_agency_signed."',fsa_agency_copy_sent_date='".$fsa_agency_copy_sent."'	WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");							break;					case 'education':			//$dbi->checkTimestamp('education','education_timestamp',$timestamp,'id',$ID);						$query=sprintf("UPDATE `education` SET name_id ='".$nameID."',start_date='".$start_date."',end_date='".$end_date."',qualification_level='".$qualification."',division_grade='".$division_grade."',institution_id='".$institutionID."',speciality_id='".$specialityID."',second_speciality_id='".$second_specialityID."',qualification_id='".$qualificationID."'");			if($scanName!=''){ // scan uploaded				$query.=sprintf(",scan_link='".$scanLink."'");				$query.=" , certificate_scan='$scan_data'"; //can't put a blob into sprintf()			}			$query.=sprintf(" WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");						break;		case 'work_experience':			//Artur Neumann INF 31.08.2012			//a update of the work_experience table did update all items in this table due a lack of a WHERE clase in the SQL			$query=sprintf("UPDATE `work_experience` SET name_id ='".$nameID."',start_date='".$start_date."',end_date='".$end_date."',leaving_reason_id='".$leavingReasonID."',country_id='".$countryID."',description='".$description."',workplace='".$workplace."',city_town='".$city_town."',job_title='".$job_title."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");			//original: $query=sprintf("UPDATE `work_experience` SET name_id ='".$nameID."',start_date='".$start_date."',end_date='".$end_date."',leaving_reason_id='".$leavingReasonID."',country_id='".$countryID."',description='".$description."',workplace='".$workplace."',city_town='".$city_town."',job_title='".$job_title."'");			break;					case 'home_assignment':			//$dbi->checkTimestamp('home_assignment','home_assignment_timestamp',$timestamp,'id',$ID);			$query=sprintf("UPDATE `home_assignment` SET date_from='".$dateFrom."', date_until='".$dateUntil."', infopack_sent='".$infoPackSent."',interview_date='".$interviewDate."',report_received='".$reportReceived."',rsent_date_member='".$rsentDateMember."',rsent_date_agency='".$rsentDateAgency."',medical_arranged='".$medicalArranged."',medical_report_received='".$medicalReportReceived."',msent_date_agency='".$msentDateAgency."',STV_manager_comments_received='".$stvManagerCommentsReceived."',invitation_letter_received='".$invitationLetterReceived."',notes='".$notes."',interview_by='".$interviewBy."',confirmed_dates='".$confirmedDates."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");				break;						case 'orientation':				//	$dbi->checkTimestamp('orientation','orientation_timestamp',$timestamp,'id',$ID);						$query=sprintf("UPDATE orientation set email_address_requested_date='".$email_address_requested."',email_address_created_date='".$email_address_created."',email_installed_date='".$email_installed."',LOT_duration_discussed_date='".$LOT_duration_discussed."',LOT_requested_date='".$LOT_requested."',LOT_confirmed_date='".$LOT_confirmed."',KTM_LOT_Confirmed_date='".$KTM_LOT_Confirmed."',KTM_LOT_scheduled_date='".$KTM_LOT_scheduled."',KTM_LOT_Confirmed_date='".$KTM_LOT_Confirmed."',Dates_of_KTM_LOT='".$Dates_of_KTM_LOT."',Housing_preferences_date='".$Housing_preferences."',PKR_LOT_housing_arranged_date='".$PKR_LOT_housing_arranged."',housing_requested_date='".$housing_requested."',housing_arranged_date='".$housing_arranged."',housing_confirmed_date='".$housing_confirmed."',link_names_sent_date='".$link_names_sent."',housing_link_person_id='".$housing_link_person_id."',housing_link_person_id='".$housing_link_person_id."',pkr_link_person_id='".$pkr_link_person_id."',school_children_link_person_id='".$school_children_link_person_id."',ktm_link_person_id='".$ktm_link_person_id."',work_link_person_id='".$work_link_person_id."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");						break;				case 'orientation_arrangement':										$query=sprintf("UPDATE `orientation_arrangement` set arrival_flight='".$arrival_flight."',arrival_date='".$arrival_date."',arrival_time='".$arrival_time."',pickup_arranged_date='".$pickup_arranged."', accomodation_arranged_date='".$acco_arranged."',bus_ticket_arranged_date='".$bus_ticket_arranged."',ticket_info_sent_to_pkr_date='".$ticket_info_sent_to_pkr."',survival_orientation_booklet_date='".$survival_orientation_booklet."',welcome_pack_date='".$welcome_pack."',welcome_letter_date='".$welcome_letter."' WHERE id=".$ID." and ".$table."_timestamp='$timestamp'");							break;		}			if ($query != "") {			$retVal.=$query."\n";												if ($extra) {                $ok = ($dbi->isInteger( $dbi->query($query)));                /*                if ($ok && ($table=='visa_history')) {                    $query1 = sprintf("UPDATE `post` SET name='".$postName."' WHERE id='".$postID."'");                    $ok = ($dbi->isInteger($dbi->query($query1)));                    $retVal.=$query1."\n";                } 				*/                if ($ok && ($table=='staff')) {                    $query1 = sprintf("UPDATE `service` SET date_until='".$leavingDate."' WHERE name_id='".$nameID."' AND (date_until = '0000-00-00' OR date_until IS NULL)");                    $ok = ($dbi->isInteger($dbi->query($query1)));                    $retVal.=$query1."\n";                }                			}			else {				//$dbi->printTransactionInfo($dbi->query($query));										$ok=($dbi->isInteger($dbi->query($query)));								}		}	}	if ($extra) {		$retVal.=$ok.":".$extraTable."\n";				if(($ok) && ($extraTable=='leave_adjustment')){							$newID=$dbi->splitIfYearBoundary($ID,$startDate,$endDate);						$retVal.=$ID.":".$newID.":".$startDate.":".$endDate.":".$adjustDays."\n";									$start_date = $dbi->getFiscalYearStart($startDate); //start of same fiscal year			$end_date = $dbi->getPreviousFiscalYear($start_date,-1); //add a year										$query1="SELECT id, adjustment from `leave_adjustment` where name_id=$nameID and leave_type_id=$leaveTypeID and adjust_date >= '".$start_date."' and adjust_date < '".$end_date."' and deleted=0";			$retVal.=$query1."\n";			$result = $dbi->query($query1);			if (mysql_num_rows($result) > 0){//A row already EXISTS so just UPDATE				$row = mysql_fetch_assoc($result);				$leaveID=$row['id'];				$existingAdjust=$row['adjustment'];				if ($existingAdjust != $adjustDays) { //update if different					$query1=sprintf("UPDATE `leave_adjustment` SET `adjustment`='$adjustDays' WHERE `id`=".$leaveID);					$ok = ($dbi->isInteger($dbi->query($query1)));					$retVal.=$query1."\n";										 
					//Artur Neumann ict.projects@nepal.inf.org
					//12.07.2013
					//get data for additional change log
					if ($ok) {
						 						 
						$additional_change_log['table'] ='leave_adjustment';
						$additional_change_log['recordID'] = $leaveID;
						$additional_change_log['updateType'] = 'update';

						array_push ($additional_change_logs, $additional_change_log);
						 
					}																								}			}			else {//NO row  EXISTS so INSERT a new row				$query1=sprintf("INSERT INTO `leave_adjustment` (id,name_id,leave_type_id,adjust_date,adjustment) VALUES ('','$nameID','$leaveTypeID','$start_date','$adjustDays')");				$retVal.=$query1."\n";												//Artur Neumann ict.projects@nepal.inf.org
				//12.07.2013
				//change to insertQuery and save the result
				$insert_result = $dbi->insertQuery($query1);
				$ok = ($dbi->isInteger($insert_result));
				
				//Artur Neumann ict.projects@nepal.inf.org
				//12.07.2013
				//get data for additional change log
				if ($ok) {
						
					$additional_change_log['table'] ='leave_adjustment';
					$additional_change_log['recordID'] = $insert_result;
					$additional_change_log['updateType'] = 'new';
						
					array_push ($additional_change_logs, $additional_change_log);
				}			}		}			if(($ok) && ($extraTable=='patient_inf') && $action=='Edit'){			            $pi_timestamp = $_POST['patient_inf_timestamp'];			$pi_ID	=	$_POST['patient_inf_id'];							$dbi->checkTimestamp('patient_inf','patient_inf_timestamp',$pi_timestamp,'id',$pi_ID);							$query1=sprintf("UPDATE `".$extraTable."` SET PAL='".$PAL."',PWD='".$PWD."',care_after_cure='".$CAC."',footwear_needed='".$footwearNeeded."' where id=".$pi_ID." and patient_inf_timestamp='$pi_timestamp'");			$retVal.=$query1."\n";					$ok = ($dbi->isInteger( $dbi->query($query1)));					}                if(($ok) && (($extraTable=='visit_treatment_reasons') || ($extraTable=='name_training_needs'))){                    //if($extraTable=='visit_treatment_reasons') {                $currentID = $ID;            //}            //else {            //    $currentID = $nameID;            //}			            // first of all, unset any existing reasons which were previously set            $detailSet = str_replace(",","','",$detailIDList);			$query1=sprintf("UPDATE `".$extraTable."` SET deleted=1 WHERE ".$extraID."=".$currentID." AND ".$extraField." NOT IN ('".$detailSet."') AND deleted=0");			$retVal.=$query1."\n";					$ok = ($dbi->isInteger( $dbi->query($query1)));									//Artur Neumann ict.projects@nepal.inf.org
			//12.07.2013
			//get data for additional change log
			if ($ok) {
			
				$result = $dbi->query("SELECT id FROM `".$extraTable."` WHERE deleted=1 AND ".$extraID."=".$currentID." AND ".$extraField." NOT IN ('".$detailSet."')");
			
				while ($row_last_update = mysql_fetch_array($result)) {										$additional_change_log['table'] =$extraTable;
					$additional_change_log['recordID'] = $row_last_update['id'];
					$additional_change_log['updateType'] = 'update';
						
					array_push ($additional_change_logs, $additional_change_log);									}
			

			
			}			            $retVal.=$detailIDList."\n";            $details = explode(",",$detailIDList);            if($detailIDList != "") {            for($i = 0;$i<sizeof($details);$i++){                $detailID = $details[$i];                if ($ok) {                    $query2 =	sprintf("SELECT ".$extraField." FROM `".$extraTable."` WHERE ".$extraID."=".$currentID." AND ".$extraField."=".$detailID);                    $retVal.=$query2."\n";                    $result =	$dbi->query($query2);			                    if(mysql_num_rows($result)	==	0) {// doesn't already exist                        $query=sprintf("INSERT INTO `".$extraTable."`(".$extraID.",".$extraField.") VALUES ('$currentID','$detailID')");                        $retVal.=$query."\n";                                                                        //Artur Neumann ict.projects@nepal.inf.org
                        //12.07.2013
                        //change to insertQuery and save the result
                        $insert_result = $dbi->insertQuery($query);
                        $ok = ($dbi->isInteger($insert_result));
                        
                        //Artur Neumann ict.projects@nepal.inf.org
                        //12.07.2013
                        //get data for additional change log
                        if ($ok) {
                        
                        	$additional_change_log['table'] =$extraTable;
                        	$additional_change_log['recordID'] = $insert_result;
                        	$additional_change_log['updateType'] = 'new';
                        
                        	array_push ($additional_change_logs, $additional_change_log);
                        }                                            }                    else { //undelete if it has been deleted                        $query=sprintf("UPDATE `".$extraTable."` SET deleted=0 WHERE ".$extraID."=".$currentID." AND ".$extraField."=$detailID AND deleted=1");                        $retVal.=$query."\n";                        $ok = ($dbi->isInteger($dbi->query($query)));                                                
                        
                        //Artur Neumann ict.projects@nepal.inf.org
                        //12.07.2013
                        //get data for additional change log
                        if ($ok) {
                        
                        	$result = $dbi->query("SELECT id FROM `".$extraTable."` WHERE deleted=0 AND ".$extraID."=".$currentID." AND ".$extraField."='".$detailID."'");
                        
                        	$row_last_update = mysql_fetch_array($result);
                                              	 
                        	$additional_change_log['table'] =$extraTable;
                        	$additional_change_log['recordID'] = $row_last_update['id'];
                        	$additional_change_log['updateType'] = 'update';

                        	array_push ($additional_change_logs, $additional_change_log);
                        
                        }                                                                                            }                }			}            }		}			if (($ok) && ($current == "true") && ($extraTable != "")) { // current phone/email/address or service post or training		            if($extraTable == 'personnel_training_needs'){				$query =	sprintf("SELECT name_id FROM `$extraTable` WHERE name_id=".$nameID);			//	$dbi->test_file($query,"\n");			}						else {				$query =	sprintf("SELECT name_id FROM `".$extraTable."` WHERE name_id=".$nameID." AND ".$extraField."=".$extraValue);                //$dbi->test_file($query,"\n");                			}						$retVal.=$query."\n";			$result =	$dbi->query($query);						if(mysql_num_rows($result)	==	0) {// doesn't already exist							$query=sprintf("INSERT INTO `".$extraTable."`(name_id,".$extraField.") VALUES ('$nameID','$extraValue')");	// same as for add new					$retVal.=$query."\n";								//Artur Neumann ict.projects@nepal.inf.org
				//12.07.2013
				//change to insertQuery and save the result
				$insert_result = $dbi->insertQuery($query);
				$ok = ($dbi->isInteger($insert_result));
				
				//Artur Neumann ict.projects@nepal.inf.org
				//12.07.2013
				//get data for additional change log
				if ($ok) {
				
					$additional_change_log['table'] =$extraTable;
					$additional_change_log['recordID'] = $insert_result;
					$additional_change_log['updateType'] = 'new';
				
					array_push ($additional_change_logs, $additional_change_log);
				}							}			else {							if($extraTable == 'personnel_training_needs'){					$query=sprintf("UPDATE `".$extraTable."` SET ".$extraField."='".$extraValue."' WHERE name_id=".$nameID);					$retVal.=$query."\n";					$ok = ($dbi->isInteger($dbi->query($query)));										//Artur Neumann ict.projects@nepal.inf.org
					//12.07.2013
					//get data for additional change log
					if ($ok) {
					
						$result = $dbi->query("SELECT id FROM `".$extraTable."` WHERE ".$extraField."='".$extraValue."' AND name_id=".$nameID);
					
						$row_last_update = mysql_fetch_array($result);
					
						$additional_change_log['table'] =$extraTable;
						$additional_change_log['recordID'] = $row_last_update['id'];
						$additional_change_log['updateType'] = 'update';
					
						array_push ($additional_change_logs, $additional_change_log);
					
					}									}                			}						if($ok) {				switch ($extraTable){				case 'name_address':				case 'name_phone':				case 'name_email':								$query =	sprintf("UPDATE `name` set ".$extraField."=".$extraValue." where id=".$nameID);					$retVal.=$query."\n";					$ok = ($dbi->isInteger($dbi->query($query)));										//Artur Neumann ict.projects@nepal.inf.org
					//12.07.2013
					//get data for additional change log
					if ($ok) {
							
						$result = $dbi->query("SELECT id FROM `".$extraTable."` WHERE ".$extraField."='".$extraValue."' AND name_id=".$nameID);
							
						$row_last_update = mysql_fetch_array($result);
							
						$additional_change_log['table'] =$extraTable;
						$additional_change_log['recordID'] = $row_last_update['id'];
						$additional_change_log['updateType'] = 'update';
							
						array_push ($additional_change_logs, $additional_change_log);
							
					}										break;								}			}			}    }                    if($ok){//insert changes information to change log table        $query		=" Cannot create change log. Please retry ";//message to display when createChangeLog() fails        if ($action == 'Edit') {$logType = 'update';} else {$logType = 'new';}        $ok=$dbi->createChangeLog($userID,$table,$ID,$logType,$popupRequestor,$nameID);                if ($ok) {
        	foreach ($additional_change_logs as $additional_change_log) {
        		$ok=$dbi->createChangeLog(        				$userID,
        				$additional_change_log['table'],
        				$additional_change_log['recordID'],
        				$additional_change_log['updateType'],
        				'tab',
        				$nameID);
        		if (!$ok) {
        			break;
        		}
        	}
        }                   }			if ($ok)					$dbi->query($dbi->printTransactionInfo("COMMIT"));// commit transaction	else		$dbi->query($dbi->printTransactionInfo($query));// force rollback		$dbi->disconnect();	//$dbi-> test_file('Savetab:'.$query."\n");	/*JUST FOR TESTING PURPOSE*//*$fh = fopen('savetab.txt', "a");fwrite($fh, "table: $table \n ID: $ID \n nameID: $nameID"); fwrite($fh,"\n");fwrite($fh, $retVal); fwrite($fh,"\n");fwrite($fh, $retVal2); fwrite($fh,"\n");fclose($fh); */?>